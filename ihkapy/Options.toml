# Previously ops variable in MatLab scripts

[fileio]
# RAW_DATA_PATH = "/Users/steve/Documents/code/unm/data"
# RAW_DATA_PATH = "/Users/steve/Documents/code/unm/data/small_data/raw" 
RAW_DATA_PATH = "/Users/steve/Documents/code/unm/data/h24_data/raw"
# WAVELET_BINARIES_PATH = "/Users/steve/Documents/code/unm/data/feature" # previously FeaturePath
# WAVELET_BINARIES_PATH = "/Users/steve/Documents/code/unm/data/small_data/binaries" 
WAVELET_BINARIES_PATH = "/Users/steve/Documents/code/unm/data/h24_data/binaries"
# FEATURES_OUTPUT_PATH = "/Users/steve/Documents/code/unm/data/features.npy" # previously .mat file
# FEATURES_OUTPUT_PATH = "/Users/steve/Documents/code/unm/data/small_data/features" 
FEATURES_OUTPUT_PATH = "/Users/steve/Documents/code/unm/data/h24_data/features"
# "/Users/steve/Documents/code/unm/data/classifier_output.npy"
# CLASSIFIER_OUTPUT_PATH = "/Users/steve/Documents/code/unm/data/small_data/models" 
CLASSIFIER_OUTPUT_PATH = "/Users/steve/Documents/code/unm/data/h24_data/models"

[params.data]
FS = 2000                         # Sample frequency in Hz
NUM_FREQ = 20                     # number of frequencies to sample
LOW_FREQ = 0.5                    # lowest freq to sample
HIGH_FREQ = 200                   # highest freq to sample
SPACING = "LOGARITHMIC"           # can only be "LOGARITHMIC" or "LINEAR"
ZSCORE_POWER = true               # bool, if true zscore the power
SCALE_PHASE = 1000                # scale factor exploit int16 range
SCALE_POWER = 1000                # scale factor exploit int16 range
N_CHAN_RAW = 4                    # Number of raw channels in .edf files
CH_PHASE_AMP = 2                  # Select the channel for which to 
                                  # compute phase-amplitude correlation
TS_FEATURES = ["wavelet_power","wavelet_phase"] # Select what to compute
N_CHAN_BINARY = 41                # = len(TS_FEATURES) * NUM_FREQ + 1
# I don't like amp_idx and ph_idx... 
# perhaps we can find a way to write them out of the software
AMP_IDX = [14,15,16,17,18,19]     # Indices start at 0 in python,
PH_IDX = [0,1,2,3,4,5,6,7,8,9]    # that's why off by one wrt to MatLab


# previously known as params.model.hyper
[params.feature]
DUR_FEAT = 5                              # five second windows
N_PREICTAL_BINS = 4                       # must be compatible with bins
PREICTAL.BINS = [ 10800, 3600, 600, 10  ] # 3h,1h,10min,10sec
PREICTAL.PCT =  [ 0.05,  0.05, 0.2, 1.0 ] # 5%,5%,20%,100%
INTRAICTAL.PCT = 1.0                      # 100%
POSTICTAL.DELAY = 600         # post-ictal ends 10mins after seizure end
POSTICTAL.PCT = 0.2
# BIN_NAMES must be compatible with bins defined above
BIN_NAMES = ["pre_ictal_bin1","pre_ictal_bin2","pre_ictal_bin3",
          "pre_ictal_bin4","intra_ictal_bin","post_ictal_bin"]
FEATURES = [
  "root_mean_squared",
  "zero_crossings"
  ] # TODO: Tentative must correspond to feature function names in feature file

# nCh_featureFile, the number of channels in .dat files was 41 but 
# hoping to have a more explicit format, see above comment in params.dat
n_chan_binary_file = 41 # = 20 + 20 + 1, phase, amp, raw


[params.model.training]
train_val_test = [ 0.6, 0.2, 0.2 ]        # must sum to 1
n_learning_cycles = 500
rate = 0.1                                # learning rate
method = "RUSBoost"




